scalar Date

type Query {
  info: String!
  feed: [Game!]!
  getGame(id: ID!): Game!
  getGamesByUser(userId: ID!): [Game!]!
  getFolder(id: ID!): Folder!
  getFolders(userId: ID!): [Folder!]!
}

type User {
  id: ID!
  name: String
  email: String
  emailVerified: Date
  image: String
  games: [Game!]!
  createdAt: Date
  updatedAt: Date
}

type Mutation {
  createGame(
    userId: ID
    title: String!
    description: String!
    # folders is an array of folder ids
    folders: [String!]
  ): Game!
  updateGame(
    id: ID!
    title: String
    description: String
    # folders is an array of folder ids
    folders: [String!]
  ): Game!
  deleteGame(id: ID!): Game!
  # games is an array of game ids
  createFolder(userId: ID!, name: String!, games: [String!]): Folder!
}

type Game {
  id: ID!
  title: String!
  description: String
  folders: [Folder!]
  userId: ID
  user: User
  createdAt: Date
  updatedAt: Date
}

type Folder {
  id: ID!
  createdAt: Date
  updatedAt: Date
  name: String
  games: [Game]
  user: User!
  userId: ID!
}

# input GameInput {
#   id: ID!
# }

# input FolderInput {
#   id: ID!
# }
